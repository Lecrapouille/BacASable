#pragma once
#include <SFML/System/Vector2.hpp>
#include <SFML/Graphics/Color.hpp>
#include <vector>

/**
 * @brief Game state structure. Contains all the data needed to represent the
 * state of the game.
 */
struct GameState
{
    /**
     * @brief Represents a car in the traffic simulation
     */
    struct Car
    {
        //! @brief Current position
        sf::Vector2f position;
        //! @brief Current color
        sf::Color color;
        //! @brief Current speed in pixels per second
        float speed = 0.0f;
        //! @brief Index of the source building
        int source_building_idx;
        //! @brief Index of the destination building
        int destination_building_idx;
        //! @brief True if the car is returning to source
        bool is_returning;
    };

    /**
     * @brief Represents a building in the simulation
     */
    struct Building
    {
        //! @brief Position of the building
        sf::Vector2f position;
        //! @brief Current color
        sf::Color color;
        //! @brief Income generated by the building
        float income = 0.0f;
    };

    /**
     * @brief Represents a road connecting two buildings
     */
    struct Road
    {
        //! @brief Index of the first building
        int building1_idx;
        //! @brief Index of the second building
        int building2_idx;
        //! @brief Current color
        sf::Color color;
    };

    /**
     * @brief Traffic simulation state
     */
    struct Traffic
    {
        //! @brief List of all cars in the simulation
        std::vector<Car> cars;
        //! @brief List of all roads
        std::vector<Road> roads;
    } traffic;

    /**
     * @brief Economic simulation state
     */
    struct Economy
    {
        //! @brief List of all buildings
        std::vector<Building> buildings;
        //! @brief Current money amount
        float money = 0.0f;
        //! @brief Current tax rate
        float tax_rate = 0.0f;
    } economy;
};