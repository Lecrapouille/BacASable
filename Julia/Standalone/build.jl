precompile(Tuple{typeof(Base.print), Base.GenericIOBuffer{Array{UInt8, 1}}, UInt16})
precompile(Tuple{typeof(Base.Libc.Libdl.dlopen), String, UInt32})
precompile(Tuple{typeof(Base.invokelatest), Any})
precompile(Tuple{typeof(ColorTypes.__init__)})
precompile(Tuple{typeof(Base.getindex), Base.EnvDict, String})
precompile(Tuple{typeof(Gtk.GLib.GClosureMarshal), Ptr{Nothing}, Ptr{Gtk.GLib.GValue}, UInt32, Ptr{Gtk.GLib.GValue}, Ptr{Nothing}, Ptr{Nothing}})
precompile(Tuple{typeof(Gtk.GLib.uv_prepare), Ptr{Nothing}, Ptr{Int32}})
precompile(Tuple{typeof(Gtk.GLib.uv_check), Ptr{Nothing}})
precompile(Tuple{typeof(Gtk.GLib.uv_dispatch), Ptr{Nothing}, Ptr{Nothing}, Int64})
precompile(Tuple{typeof(Gtk.GLib.g_yield), UInt64})
precompile(Tuple{typeof(Gtk.GLib.__init__)})
precompile(Tuple{typeof(Base.cconvert), Type, Int64})
precompile(Tuple{typeof(Gtk.__init__)})
precompile(Tuple{typeof(Base.filter), Gtk.var"#311#317", Array{String, 1}})
precompile(Tuple{Type{NamedTuple{(:validate_strict, :libc, :call_abi, :libgfortran_version, :cxxstring_abi, :libstdcxx_version, :os_version), T} where T<:Tuple}, Tuple{Bool, String, Nothing, Base.VersionNumber, String, Base.VersionNumber, Nothing}})
precompile(Tuple{typeof(Base.merge), NamedTuple{(:validate_strict, :libc, :call_abi, :libgfortran_version, :cxxstring_abi, :libstdcxx_version, :os_version), Tuple{Bool, String, Nothing, Base.VersionNumber, String, Base.VersionNumber, Nothing}}, Array{Base.Pair{Symbol, Base.SubString{String}}, 1}})
precompile(Tuple{Base.var"##s79#169", Any, Any, Any, Any, Any})
precompile(Tuple{typeof(Base.merge_types), Tuple{Vararg{Symbol, N} where N}, Type{var"#s79"} where var"#s79"<:(NamedTuple{names, T} where T<:Tuple where names), Type{var"#s78"} where var"#s78"<:(NamedTuple{names, T} where T<:Tuple where names)})
precompile(Tuple{typeof(Base.merge), NamedTuple{(:validate_strict, :libc, :call_abi, :libgfortran_version, :cxxstring_abi, :libstdcxx_version, :os_version), Tuple{Bool, String, Nothing, Base.VersionNumber, String, Base.VersionNumber, Nothing}}, NamedTuple{(:julia_version,), Tuple{Base.SubString{String}}}})
precompile(Tuple{Core.var"#Type##kw", NamedTuple{(:validate_strict, :libc, :call_abi, :libgfortran_version, :cxxstring_abi, :libstdcxx_version, :os_version, :julia_version), Tuple{Bool, String, Nothing, Base.VersionNumber, String, Base.VersionNumber, Nothing, Base.SubString{String}}}, Type{Base.BinaryPlatforms.Platform}, String, String})
precompile(Tuple{Artifacts.var"##artifact_hash#13", Base.BinaryPlatforms.Platform, Nothing, typeof(Artifacts.artifact_hash), String, String})
precompile(Tuple{Gtk.GLib.var"#100#101"})
